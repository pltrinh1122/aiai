metadata:
  id: docker-verification
  intent: Docker Installation Verification
  technicalProficiency: Intermediate
  context:
    designPrinciples:
    - Verify system state before proceeding
    - Fail fast and safe
    - Provide clear validation feedback
    dependencies:
    - Shell command execution
    - System state validation
    compatibility:
    - Linux systems with shell access
    - Ubuntu/Debian package management
body:
- type: command
  id: phase-service_verification-start
  intent: 'Starting phase: Verify Docker service is running'
  shellCommand: 'echo ''Starting phase: Verify Docker service is running'''
  destructive: false
  conditional: false
- type: validation
  id: validate-docker_service
  intent: Docker service is active
  command: systemctl is-active docker
  expected_output: active
  critical: true
  on_fail: abort
  timeout: 30
- type: validation
  id: validate-docker_socket
  intent: Docker socket is accessible
  command: test -S /var/run/docker.sock && echo 'accessible'
  expected_output: accessible
  critical: true
  on_fail: abort
  timeout: 30
- type: command
  id: phase-service_verification-end
  intent: 'Completed phase: Verify Docker service is running'
  shellCommand: 'echo ''Completed phase: Verify Docker service is running'''
  destructive: false
  conditional: false
- type: command
  id: phase-functionality_testing-start
  intent: 'Starting phase: Test Docker functionality'
  shellCommand: 'echo ''Starting phase: Test Docker functionality'''
  destructive: false
  conditional: false
- type: validation
  id: validate-docker_version
  intent: Docker version check
  command: docker --version
  expected_output: Docker version
  critical: true
  on_fail: abort
  timeout: 30
- type: validation
  id: validate-docker_info
  intent: Docker system info
  command: docker info
  expected_output: 'Containers:'
  critical: false
  on_fail: skip
  timeout: 30
- type: validation
  id: validate-docker_test_container
  intent: Run test container
  command: docker run --rm hello-world
  expected_output: Hello from Docker
  critical: false
  on_fail: skip
  timeout: 30
- type: command
  id: phase-functionality_testing-end
  intent: 'Completed phase: Test Docker functionality'
  shellCommand: 'echo ''Completed phase: Test Docker functionality'''
  destructive: false
  conditional: false
- type: command
  id: phase-permissions_verification-start
  intent: 'Starting phase: Verify Docker permissions and groups'
  shellCommand: 'echo ''Starting phase: Verify Docker permissions and groups'''
  destructive: false
  conditional: false
- type: validation
  id: validate-docker_group
  intent: Docker group exists
  command: getent group docker
  expected_output: 'docker:'
  critical: false
  on_fail: skip
  timeout: 30
- type: validation
  id: validate-user_in_docker_group
  intent: Current user in docker group
  command: groups $USER | grep -q docker && echo 'in_group'
  expected_output: in_group
  critical: false
  on_fail: skip
  timeout: 30
- type: command
  id: phase-permissions_verification-end
  intent: 'Completed phase: Verify Docker permissions and groups'
  shellCommand: 'echo ''Completed phase: Verify Docker permissions and groups'''
  destructive: false
  conditional: false
- type: command
  id: phase-storage_verification-start
  intent: 'Starting phase: Verify Docker storage configuration'
  shellCommand: 'echo ''Starting phase: Verify Docker storage configuration'''
  destructive: false
  conditional: false
- type: validation
  id: validate-docker_storage
  intent: Docker storage driver
  command: docker info | grep 'Storage Driver'
  expected_output: 'Storage Driver:'
  critical: false
  on_fail: skip
  timeout: 30
- type: validation
  id: validate-docker_root_dir
  intent: Docker root directory exists
  command: test -d /var/lib/docker && echo 'exists'
  expected_output: exists
  critical: false
  on_fail: skip
  timeout: 30
- type: command
  id: phase-storage_verification-end
  intent: 'Completed phase: Verify Docker storage configuration'
  shellCommand: 'echo ''Completed phase: Verify Docker storage configuration'''
  destructive: false
  conditional: false
- type: command
  id: phase-network_verification-start
  intent: 'Starting phase: Verify Docker networking'
  shellCommand: 'echo ''Starting phase: Verify Docker networking'''
  destructive: false
  conditional: false
- type: validation
  id: validate-docker_networks
  intent: Docker networks list
  command: docker network ls
  expected_output: bridge
  critical: false
  on_fail: skip
  timeout: 30
- type: validation
  id: validate-docker_bridge_network
  intent: Bridge network exists
  command: docker network inspect bridge
  expected_output: bridge
  critical: false
  on_fail: skip
  timeout: 30
- type: command
  id: phase-network_verification-end
  intent: 'Completed phase: Verify Docker networking'
  shellCommand: 'echo ''Completed phase: Verify Docker networking'''
  destructive: false
  conditional: false
- type: command
  id: verification-complete
  intent: Verification completed successfully
  shellCommand: echo 'All verification checks completed successfully'
  destructive: false
  conditional: false
