metadata:
  id: btrfs_ml-verification
  intent: BTRFS ML Partition Installation Verification
  technicalProficiency: Intermediate
  context:
    designPrinciples:
    - Verify system state before proceeding
    - Fail fast and safe
    - Provide clear validation feedback
    dependencies:
    - Shell command execution
    - System state validation
    compatibility:
    - Linux systems with shell access
    - Ubuntu/Debian package management
body:
- type: command
  id: phase-mount_verification-start
  intent: 'Starting phase: Verify ML partition is properly mounted'
  shellCommand: 'echo ''Starting phase: Verify ML partition is properly mounted'''
  destructive: false
  conditional: false
- type: validation
  id: validate-ml_mount
  intent: /ml partition mounted as BTRFS
  command: mount | grep 'on /ml '
  expected_output: btrfs
  critical: true
  on_fail: abort
  timeout: 30
- type: validation
  id: validate-ml_mount_point
  intent: /ml directory exists and is accessible
  command: test -d /ml && test -r /ml && echo 'accessible'
  expected_output: accessible
  critical: true
  on_fail: abort
  timeout: 30
- type: validation
  id: validate-ml_permissions
  intent: /ml directory has correct permissions
  command: ls -ld /ml
  expected_output: drwxr-xr-x
  critical: false
  on_fail: skip
  timeout: 30
- type: command
  id: phase-mount_verification-end
  intent: 'Completed phase: Verify ML partition is properly mounted'
  shellCommand: 'echo ''Completed phase: Verify ML partition is properly mounted'''
  destructive: false
  conditional: false
- type: command
  id: phase-subvolume_structure-start
  intent: 'Starting phase: Verify ML partition subvolume structure'
  shellCommand: 'echo ''Starting phase: Verify ML partition subvolume structure'''
  destructive: false
  conditional: false
- type: command
  id: check-ml_subvolumes
  intent: List ML partition subvolumes
  shellCommand: btrfs subvolume list /ml
  destructive: false
  conditional: false
- type: validation
  id: validate-ml_snapshots_dir
  intent: ML snapshots directory exists
  command: test -d /ml/.snapshots && echo 'exists'
  expected_output: exists
  critical: false
  on_fail: skip
  timeout: 30
- type: validation
  id: validate-ml_models_dir
  intent: ML models directory exists
  command: test -d /ml/models && echo 'exists'
  expected_output: exists
  critical: false
  on_fail: skip
  timeout: 30
- type: validation
  id: validate-ml_datasets_dir
  intent: ML datasets directory exists
  command: test -d /ml/datasets && echo 'exists'
  expected_output: exists
  critical: false
  on_fail: skip
  timeout: 30
- type: command
  id: phase-subvolume_structure-end
  intent: 'Completed phase: Verify ML partition subvolume structure'
  shellCommand: 'echo ''Completed phase: Verify ML partition subvolume structure'''
  destructive: false
  conditional: false
- type: command
  id: phase-functionality_testing-start
  intent: 'Starting phase: Test BTRFS functionality for ML workloads'
  shellCommand: 'echo ''Starting phase: Test BTRFS functionality for ML workloads'''
  destructive: false
  conditional: false
- type: command
  id: check-ml_snapshot_creation
  intent: Create test ML snapshot
  shellCommand: btrfs subvolume snapshot /ml /ml/.snapshots/ml-verification-test-$(date
    +%Y%m%d-%H%M)
  destructive: false
  conditional: false
- type: command
  id: check-ml_snapshot_cleanup
  intent: Remove test ML snapshot
  shellCommand: btrfs subvolume delete /ml/.snapshots/ml-verification-test-$(date
    +%Y%m%d-%H%M)
  destructive: false
  conditional: false
- type: validation
  id: validate-ml_write_test
  intent: Test write performance to ML partition
  command: dd if=/dev/zero of=/ml/test_write_$(date +%s) bs=1M count=100 2>/dev/null
    && rm /ml/test_write_$(date +%s) && echo 'write_test_passed'
  expected_output: write_test_passed
  critical: false
  on_fail: skip
  timeout: 30
- type: command
  id: phase-functionality_testing-end
  intent: 'Completed phase: Test BTRFS functionality for ML workloads'
  shellCommand: 'echo ''Completed phase: Test BTRFS functionality for ML workloads'''
  destructive: false
  conditional: false
- type: command
  id: phase-performance_analysis-start
  intent: 'Starting phase: Analyze ML partition performance'
  shellCommand: 'echo ''Starting phase: Analyze ML partition performance'''
  destructive: false
  conditional: false
- type: command
  id: check-ml_compression_analysis
  intent: Analyze compression effectiveness for ML data
  shellCommand: compsize /ml
  destructive: false
  conditional: false
- type: command
  id: check-ml_filesystem_performance
  intent: Check ML filesystem performance
  shellCommand: btrfs filesystem df /ml && btrfs filesystem usage /ml
  destructive: false
  conditional: false
- type: command
  id: check-ml_space_usage
  intent: ML partition space usage
  shellCommand: df -h /ml
  destructive: false
  conditional: false
- type: command
  id: phase-performance_analysis-end
  intent: 'Completed phase: Analyze ML partition performance'
  shellCommand: 'echo ''Completed phase: Analyze ML partition performance'''
  destructive: false
  conditional: false
- type: command
  id: phase-ml_optimization-start
  intent: 'Starting phase: Verify ML-specific optimizations'
  shellCommand: 'echo ''Starting phase: Verify ML-specific optimizations'''
  destructive: false
  conditional: false
- type: command
  id: check-ml_compression_settings
  intent: Check compression settings for ML workloads
  shellCommand: btrfs property get /ml compression
  destructive: false
  conditional: false
- type: validation
  id: validate-ml_noatime_mount
  intent: Check if noatime is set for performance
  command: mount | grep 'on /ml ' | grep -q noatime && echo 'noatime_set'
  expected_output: noatime_set
  critical: false
  on_fail: skip
  timeout: 30
- type: command
  id: check-ml_ssd_optimization
  intent: Check for SSD optimization settings
  shellCommand: btrfs property get /ml ssd
  destructive: false
  conditional: false
- type: command
  id: phase-ml_optimization-end
  intent: 'Completed phase: Verify ML-specific optimizations'
  shellCommand: 'echo ''Completed phase: Verify ML-specific optimizations'''
  destructive: false
  conditional: false
- type: command
  id: phase-filesystem_integrity-start
  intent: 'Starting phase: Verify ML partition integrity'
  shellCommand: 'echo ''Starting phase: Verify ML partition integrity'''
  destructive: false
  conditional: false
- type: command
  id: check-ml_scrub_start
  intent: Start BTRFS scrub for ML partition
  shellCommand: btrfs scrub start /ml
  destructive: false
  conditional: false
- type: command
  id: check-ml_scrub_status
  intent: Check BTRFS scrub status for ML partition
  shellCommand: btrfs scrub status /ml
  destructive: false
  conditional: false
- type: command
  id: check-ml_filesystem_errors
  intent: Check for ML partition filesystem errors
  shellCommand: dmesg | grep -i error | grep -i ml | tail -3
  destructive: false
  conditional: false
- type: command
  id: phase-filesystem_integrity-end
  intent: 'Completed phase: Verify ML partition integrity'
  shellCommand: 'echo ''Completed phase: Verify ML partition integrity'''
  destructive: false
  conditional: false
- type: command
  id: phase-ml_environment-start
  intent: 'Starting phase: Verify ML environment setup'
  shellCommand: 'echo ''Starting phase: Verify ML environment setup'''
  destructive: false
  conditional: false
- type: command
  id: check-ml_directory_structure
  intent: Verify ML directory structure
  shellCommand: find /ml -maxdepth 2 -type d | sort
  destructive: false
  conditional: false
- type: command
  id: check-ml_permissions_check
  intent: Check ML directory permissions
  shellCommand: ls -la /ml/
  destructive: false
  conditional: false
- type: command
  id: check-ml_quota_check
  intent: Check if quotas are enabled for ML partition
  shellCommand: btrfs qgroup show /ml
  destructive: false
  conditional: false
- type: command
  id: phase-ml_environment-end
  intent: 'Completed phase: Verify ML environment setup'
  shellCommand: 'echo ''Completed phase: Verify ML environment setup'''
  destructive: false
  conditional: false
- type: command
  id: phase-final_assessment-start
  intent: 'Starting phase: Final ML partition health assessment'
  shellCommand: 'echo ''Starting phase: Final ML partition health assessment'''
  destructive: false
  conditional: false
- type: command
  id: check-ml_filesystem_overview
  intent: Display ML BTRFS filesystem overview
  shellCommand: btrfs filesystem show /ml
  destructive: false
  conditional: false
- type: command
  id: check-ml_overall_health
  intent: Overall ML partition health
  shellCommand: btrfs filesystem usage /ml && df -h /ml
  destructive: false
  conditional: false
- type: command
  id: phase-final_assessment-end
  intent: 'Completed phase: Final ML partition health assessment'
  shellCommand: 'echo ''Completed phase: Final ML partition health assessment'''
  destructive: false
  conditional: false
- type: command
  id: verification-complete
  intent: Verification completed successfully
  shellCommand: echo 'All verification checks completed successfully'
  destructive: false
  conditional: false
