{
  "installation_type": "btrfs_subvolume_creation",
  "version": "1.0",
  "description": "BTRFS Subvolume Creation for Ubuntu AI/ML Installation",
  "author": "Verified Installer Team",
  "created_date": "2023-12-18",
  "phases": [
    {
      "name": "system_preparation",
      "description": "Prepare system for BTRFS subvolume creation",
      "checks": [
        {
          "name": "system_device_verification",
          "description": "Verify system BTRFS device exists",
          "command": "SYSTEM_DEVICE=\"/dev/nvme0n1p3\" && [ -b \"$SYSTEM_DEVICE\" ] && echo 'system_device_found' || echo 'system_device_missing'",
          "expected_pattern": "system_device_found",
          "severity": "critical",
          "validation_type": "output_pattern"
        },
        {
          "name": "btrfs_tools_availability",
          "description": "Check BTRFS tools are available",
          "command": "which btrfs >/dev/null 2>&1 && btrfs --version 2>/dev/null | head -1 || echo 'btrfs_tools_missing'",
          "expected_pattern": "",
          "severity": "critical",
          "validation_type": "output_pattern"
        },
        {
          "name": "sudo_privileges_check",
          "description": "Verify sudo privileges for subvolume operations",
          "command": "sudo -n true 2>/dev/null && echo 'sudo_privileges_available' || echo 'sudo_privileges_required'",
          "expected_pattern": "sudo_privileges_available",
          "severity": "critical",
          "validation_type": "output_pattern"
        }
      ]
    },
    {
      "name": "mount_point_preparation",
      "description": "Prepare mount point for system BTRFS root access",
      "checks": [
        {
          "name": "mount_point_creation",
          "description": "Create mount point for system BTRFS root access",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && sudo mkdir -p \"$MOUNT_POINT\" && echo 'mount_point_created'",
          "expected_pattern": "mount_point_created",
          "severity": "critical",
          "validation_type": "output_pattern"
        },
        {
          "name": "mount_point_permissions",
          "description": "Verify mount point permissions",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && ls -la \"$MOUNT_POINT\"",
          "expected_pattern": "",
          "severity": "informational",
          "validation_type": "output_pattern"
        }
      ]
    },
    {
      "name": "system_btrfs_mount",
      "description": "Mount system BTRFS root for subvolume access",
      "checks": [
        {
          "name": "system_btrfs_mount_operation",
          "description": "Mount the system BTRFS partition directly",
          "command": "SYSTEM_DEVICE=\"/dev/nvme0n1p3\" && MOUNT_POINT=\"/mnt/system-btrfs\" && sudo mount \"$SYSTEM_DEVICE\" \"$MOUNT_POINT\" && echo 'system_btrfs_mounted'",
          "expected_pattern": "system_btrfs_mounted",
          "severity": "critical",
          "validation_type": "output_pattern"
        },
        {
          "name": "mount_verification",
          "description": "Verify system BTRFS root is mounted",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && mount | grep -q \"$MOUNT_POINT\" && echo 'mount_verified' || echo 'mount_not_found'",
          "expected_pattern": "mount_verified",
          "severity": "critical",
          "validation_type": "output_pattern"
        },
        {
          "name": "mount_details",
          "description": "Display mount details for verification",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && mount | grep \"$MOUNT_POINT\"",
          "expected_pattern": "",
          "severity": "informational",
          "validation_type": "output_pattern"
        }
      ]
    },
    {
      "name": "core_system_subvolume_creation",
      "description": "Create core system subvolumes according to S1 strategy",
      "checks": [
        {
          "name": "system_root_subvolume",
          "description": "Create system root subvolume (@)",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && sudo btrfs subvolume create \"$MOUNT_POINT/@\" && echo 'system_root_subvolume_created'",
          "expected_pattern": "system_root_subvolume_created",
          "severity": "critical",
          "validation_type": "output_pattern"
        },
        {
          "name": "home_subvolume",
          "description": "Create home directory subvolume (@home)",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && sudo btrfs subvolume create \"$MOUNT_POINT/@home\" && echo 'home_subvolume_created'",
          "expected_pattern": "home_subvolume_created",
          "severity": "critical",
          "validation_type": "output_pattern"
        },
        {
          "name": "var_log_subvolume",
          "description": "Create log data subvolume (@var-log)",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && sudo btrfs subvolume create \"$MOUNT_POINT/@var-log\" && echo 'var_log_subvolume_created'",
          "expected_pattern": "var_log_subvolume_created",
          "severity": "critical",
          "validation_type": "output_pattern"
        },
        {
          "name": "var_cache_subvolume",
          "description": "Create cache data subvolume (@var-cache)",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && sudo btrfs subvolume create \"$MOUNT_POINT/@var-cache\" && echo 'var_cache_subvolume_created'",
          "expected_pattern": "var_cache_subvolume_created",
          "severity": "critical",
          "validation_type": "output_pattern"
        },
        {
          "name": "var_tmp_subvolume",
          "description": "Create temporary data subvolume (@var-tmp)",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && sudo btrfs subvolume create \"$MOUNT_POINT/@var-tmp\" && echo 'var_tmp_subvolume_created'",
          "expected_pattern": "var_tmp_subvolume_created",
          "severity": "critical",
          "validation_type": "output_pattern"
        },
        {
          "name": "var_spool_subvolume",
          "description": "Create spool data subvolume (@var-spool)",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && sudo btrfs subvolume create \"$MOUNT_POINT/@var-spool\" && echo 'var_spool_subvolume_created'",
          "expected_pattern": "var_spool_subvolume_created",
          "severity": "critical",
          "validation_type": "output_pattern"
        },
        {
          "name": "var_backups_subvolume",
          "description": "Create backup data subvolume (@var-backups)",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && sudo btrfs subvolume create \"$MOUNT_POINT/@var-backups\" && echo 'var_backups_subvolume_created'",
          "expected_pattern": "var_backups_subvolume_created",
          "severity": "critical",
          "validation_type": "output_pattern"
        },
        {
          "name": "snapshots_subvolume",
          "description": "Create snapshots storage subvolume (@snapshots)",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && sudo btrfs subvolume create \"$MOUNT_POINT/@snapshots\" && echo 'snapshots_subvolume_created'",
          "expected_pattern": "snapshots_subvolume_created",
          "severity": "critical",
          "validation_type": "output_pattern"
        }
      ]
    },
    {
      "name": "subvolume_verification",
      "description": "Verify all subvolumes were created successfully",
      "checks": [
        {
          "name": "subvolume_listing",
          "description": "List all created subvolumes",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && sudo btrfs subvolume list \"$MOUNT_POINT\"",
          "expected_pattern": "",
          "severity": "informational",
          "validation_type": "output_pattern"
        },
        {
          "name": "subvolume_count_verification",
          "description": "Verify expected number of subvolumes created",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && EXPECTED_SUBVOLUMES=8 && CREATED_SUBVOLUMES=$(sudo btrfs subvolume list \"$MOUNT_POINT\" | grep -E '(@|@home|@var-log|@var-cache|@var-tmp|@var-spool|@var-backups|@snapshots)' | wc -l) && if [ \"$CREATED_SUBVOLUMES\" -eq \"$EXPECTED_SUBVOLUMES\" ]; then echo \"subvolume_count_correct:$CREATED_SUBVOLUMES\"; else echo \"subvolume_count_mismatch:expected_$EXPECTED_SUBVOLUMES_created_$CREATED_SUBVOLUMES\"; fi",
          "expected_pattern": "subvolume_count_correct:8",
          "severity": "critical",
          "validation_type": "output_pattern"
        },
        {
          "name": "subvolume_details",
          "description": "Get detailed subvolume information",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && echo 'Subvolume Details:' && sudo btrfs subvolume list \"$MOUNT_POINT\" | grep -E '(@|@home|@var-log|@var-cache|@var-tmp|@var-spool|@var-backups|@snapshots)'",
          "expected_pattern": "",
          "severity": "informational",
          "validation_type": "output_pattern"
        }
      ]
    },
    {
      "name": "subvolume_strategy_validation",
      "description": "Validate subvolume strategy implementation",
      "checks": [
        {
          "name": "core_subvolume_verification",
          "description": "Verify core system subvolume (@) exists",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && sudo btrfs subvolume list \"$MOUNT_POINT\" | grep -q '@ ' && echo 'core_subvolume_exists' || echo 'core_subvolume_missing'",
          "expected_pattern": "core_subvolume_exists",
          "severity": "critical",
          "validation_type": "output_pattern"
        },
        {
          "name": "home_subvolume_verification",
          "description": "Verify home subvolume (@home) exists",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && sudo btrfs subvolume list \"$MOUNT_POINT\" | grep -q '@home ' && echo 'home_subvolume_exists' || echo 'home_subvolume_missing'",
          "expected_pattern": "home_subvolume_exists",
          "severity": "critical",
          "validation_type": "output_pattern"
        },
        {
          "name": "excluded_subvolumes_verification",
          "description": "Verify excluded volatile data subvolumes exist",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && EXCLUDED_COUNT=$(sudo btrfs subvolume list \"$MOUNT_POINT\" | grep -E '(@var-log|@var-cache|@var-tmp|@var-spool|@var-backups)' | wc -l) && if [ \"$EXCLUDED_COUNT\" -eq 5 ]; then echo \"excluded_subvolumes_correct:$EXCLUDED_COUNT\"; else echo \"excluded_subvolumes_missing:found_$EXCLUDED_COUNT\"; fi",
          "expected_pattern": "excluded_subvolumes_correct:5",
          "severity": "critical",
          "validation_type": "output_pattern"
        },
        {
          "name": "snapshots_subvolume_verification",
          "description": "Verify snapshots storage subvolume (@snapshots) exists",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && sudo btrfs subvolume list \"$MOUNT_POINT\" | grep -q '@snapshots ' && echo 'snapshots_subvolume_exists' || echo 'snapshots_subvolume_missing'",
          "expected_pattern": "snapshots_subvolume_exists",
          "severity": "critical",
          "validation_type": "output_pattern"
        }
      ]
    },
    {
      "name": "filesystem_integrity_check",
      "description": "Check BTRFS filesystem integrity after subvolume creation",
      "checks": [
        {
          "name": "btrfs_filesystem_status",
          "description": "Check BTRFS filesystem status",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && sudo btrfs filesystem show \"$MOUNT_POINT\"",
          "expected_pattern": "",
          "severity": "informational",
          "validation_type": "output_pattern"
        },
        {
          "name": "btrfs_space_usage",
          "description": "Check BTRFS space usage after subvolume creation",
          "command": "MOUNT_POINT=\"/mnt/system-btrfs\" && sudo btrfs filesystem df \"$MOUNT_POINT\"",
          "expected_pattern": "",
          "severity": "informational",
          "validation_type": "output_pattern"
        }
      ]
    },
    {
      "name": "strategy_summary",
      "description": "Generate S1 strategy implementation summary",
      "checks": [
        {
          "name": "subvolume_strategy_summary",
          "description": "Display subvolume strategy summary",
          "command": "echo 'S1 Three-Partition Storage Strategy Implementation:' && echo 'Subvolume Strategy Summary:' && echo '@ - INCLUDED (Core system state, OS, /var/lib)' && echo '@home - INDEPENDENT (Personal data separate lifecycle)' && echo '@var-log - EXCLUDED (Ephemeral log data)' && echo '@var-cache - EXCLUDED (Regenerable cache data)' && echo '@var-tmp - EXCLUDED (Temporary files)' && echo '@var-spool - EXCLUDED (Mail/print queues)' && echo '@var-backups - EXCLUDED (System backup files)' && echo '@snapshots - EXCLUDED (Prevents recursive snapshots)'",
          "expected_pattern": "",
          "severity": "informational",
          "validation_type": "output_pattern"
        },
        {
          "name": "critical_design_note",
          "description": "Display critical design information",
          "command": "echo 'Critical Design: @ subvolume preserves essential /var/lib data while excluding volatile data through dedicated subvolumes.'",
          "expected_pattern": "",
          "severity": "informational",
          "validation_type": "output_pattern"
        },
        {
          "name": "next_steps_guidance",
          "description": "Provide next steps guidance",
          "command": "echo 'READY FOR NEXT STEP: Section 4.5 - Migrate System Data to Subvolumes' && echo 'IMPORTANT: Do NOT unmount /mnt/system-btrfs - required for data migration'",
          "expected_pattern": "",
          "severity": "informational",
          "validation_type": "output_pattern"
        }
      ]
    }
  ],
  "mount_points": {
    "/mnt/system-btrfs": "btrfs"
  },
  "services": [],
  "filesystems": [
    "btrfs"
  ],
  "test_operations": {
    "subvolume_creation_test": {
      "command": "sudo btrfs subvolume create /tmp/test-subvolume-$$",
      "cleanup": "sudo btrfs subvolume delete /tmp/test-subvolume-$$",
      "description": "Test BTRFS subvolume creation capability"
    },
    "mount_test": {
      "command": "sudo mount /dev/nvme0n1p3 /tmp/test-mount-$$",
      "cleanup": "sudo umount /tmp/test-mount-$$ && sudo rmdir /tmp/test-mount-$$",
      "description": "Test BTRFS partition mounting"
    }
  },
  "dependencies": {
    "required_commands": [
      "btrfs",
      "mount",
      "mkdir",
      "sudo",
      "grep",
      "wc",
      "echo"
    ],
    "optional_commands": [
      "ls",
      "cat"
    ]
  },
  "post_verification": {
    "success_message": "BTRFS subvolume creation completed successfully - all 8 system subvolumes created per S1 strategy",
    "failure_message": "BTRFS subvolume creation failed - review issues before proceeding",
    "next_steps": [
      "Section 4.5 - Migrate System Data to Subvolumes",
      "Configure subvolume mount points",
      "Implement snapshot strategies",
      "Set up automated backup procedures"
    ]
  }
}