metadata:
  id: "test-complex-installation"
  intent: "Test complex installation with nested scripts"
  technicalProficiency: "Expert"
  context:
    phase:
      name: "storage-setup"
      number: 2
      description: "Complex storage setup with multiple components"
      critical: true

body:
  - type: "script"
    scriptType: "procedure"
    id: "partitioning-script"
    intent: "Create disk partitions"
    atomic: true
    body:
      - type: "command"
        id: "create-partition-table"
        intent: "Create GPT partition table"
        shellCommand: "sudo parted /dev/nvme0n1 mklabel gpt"
        destructive: true
        conditional: false

      - type: "validation"
        id: "verify-partition-table"
        intent: "Verify GPT partition table was created"
        command: "sudo parted /dev/nvme0n1 print | grep -q 'gpt' && echo 'gpt_created'"
        expected_output: "gpt_created"
        critical: true
        on_fail: "abort"

      - type: "command"
        id: "create-system-partition"
        intent: "Create system partition"
        shellCommand: "sudo parted /dev/nvme0n1 mkpart primary 1MiB 200GiB"
        destructive: true
        conditional: false

  - type: "script"
    scriptType: "procedure"
    id: "filesystem-script"
    intent: "Create filesystems"
    atomic: true
    body:
      - type: "command"
        id: "format-system-partition"
        intent: "Format system partition with BTRFS"
        shellCommand: "sudo mkfs.btrfs /dev/nvme0n1p1"
        destructive: true
        conditional: false

      - type: "validation"
        id: "verify-btrfs-created"
        intent: "Verify BTRFS filesystem was created"
        command: "sudo btrfs filesystem show /dev/nvme0n1p1 && echo 'btrfs_created'"
        expected_output: "btrfs_created"
        critical: true
        on_fail: "abort"

  - type: "conditional"
    id: "check-gpu"
    condition:
      source: "gpu-detection"
      evaluate: "success"
    then:
      - ["gpu-optimization-script"]
    else:
      - ["cpu-only-script"]

  - type: "command"
    id: "gpu-detection"
    intent: "Detect GPU for optimization"
    shellCommand: "lspci | grep -i nvidia && echo 'gpu_found' || echo 'no_gpu'"
    destructive: false
    conditional: false 