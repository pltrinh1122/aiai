[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aiailint"
version = "1.0.0"
description = "AIAI Script validation and linting tool"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AIAI Team", email = "team@aiai.dev"}
]
maintainers = [
    {name = "AIAI Team", email = "team@aiai.dev"}
]
keywords = ["aiai", "validation", "linting", "yaml", "schema", "bash"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = [
    "pyyaml>=6.0",
    "jsonschema>=4.0",
    "bashlex>=0.16",
    "click>=8.0.0",
    "rich>=13.0.0",
    "colorama>=0.4.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "bandit>=1.7.0",
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
    "coverage>=7.0.0",
    "types-PyYAML>=6.0.0",
    "types-jsonschema>=4.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "factory-boy>=3.2.0",
    "faker>=18.0.0",
    "hypothesis>=6.0.0",
    "mutmut>=2.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-profiling>=1.7.0",
    "coverage[toml]>=7.0.0",
    "pytest-html>=3.1.0",
    "pytest-json-report>=1.5.0",
    "responses>=0.23.0",
    "httpretty>=1.1.0",
    "freezegun>=1.2.0",
    "pytest-freezegun>=0.4.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "locust>=2.15.0",
    "memory-profiler>=0.60.0",
    "psutil>=5.9.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/aiai/aiailint"
Documentation = "https://aiailint.readthedocs.io/"
Repository = "https://github.com/aiai/aiailint.git"
"Bug Tracker" = "https://github.com/aiai/aiailint/issues"
Changelog = "https://github.com/aiai/aiailint/blob/main/CHANGELOG.md"

[project.scripts]
aiailint = "aiailint.aiailint:main"

[tool.setuptools]
packages = ["aiailint"]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
aiailint = ["*.json", "*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["aiailint"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "yaml.*",
    "jsonschema.*",
    "bashlex.*",
    "click.*",
    "rich.*",
    "colorama.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=aiailint",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "functional: marks tests as functional tests",
    "destructive: marks tests that may be destructive",
    "performance: marks tests as performance tests",
    "security: marks tests as security tests",
]

[tool.coverage.run]
source = ["aiailint"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "*/build/*",
    "*/dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.safety]
output = "json"
