{
  "installation_type": "test_clean",
  "version": "1.0",
  "description": "Clean test viScript for unit testing without unsupported attributes",
  "author": "Verified Installer Team",
  "created_date": "2025-01-02",
  "phases": [
    {
      "name": "validation_type_tests",
      "description": "Test all validation types supported by the framework",
      "checks": [
        {
          "name": "return_value_test",
          "description": "Test return value validation - command succeeds with expected return code",
          "command": "echo 'success'",
          "validation_type": "return_value",
          "expected_return": 0,
          "severity": "critical"
        },
        {
          "name": "return_value_failure_test",
          "description": "Test return value validation - command fails with unexpected return code",
          "command": "exit 1",
          "validation_type": "return_value",
          "expected_return": 0,
          "severity": "informational"
        },
        {
          "name": "output_pattern_test",
          "description": "Test output pattern validation - command output matches expected pattern",
          "command": "echo 'pattern_match_success'",
          "validation_type": "output_pattern",
          "expected_pattern": "pattern_match_success",
          "severity": "critical"
        },
        {
          "name": "output_pattern_failure_test",
          "description": "Test output pattern validation - command output does not match expected pattern",
          "command": "echo 'wrong_pattern'",
          "validation_type": "output_pattern",
          "expected_pattern": "correct_pattern",
          "severity": "informational"
        },
        {
          "name": "both_validation_test",
          "description": "Test both return value and output pattern validation - both succeed",
          "command": "echo 'both_success'",
          "validation_type": "both",
          "expected_return": 0,
          "expected_pattern": "both_success",
          "severity": "critical"
        },
        {
          "name": "both_validation_partial_failure_test",
          "description": "Test both validation - return value succeeds but pattern fails",
          "command": "echo 'wrong_pattern'",
          "validation_type": "both",
          "expected_return": 0,
          "expected_pattern": "correct_pattern",
          "severity": "informational"
        },
        {
          "name": "execute_only_test",
          "description": "Test execute only validation - command executes without validation",
          "command": "echo 'execute_only_success'",
          "validation_type": "none",
          "severity": "critical"
        },
        {
          "name": "execute_only_failure_test",
          "description": "Test execute only validation - command fails but still counts as success",
          "command": "exit 1",
          "validation_type": "none",
          "severity": "informational"
        }
      ]
    },
    {
      "name": "severity_tests",
      "description": "Test both severity levels and their impact on scoring and failure handling",
      "checks": [
        {
          "name": "critical_success",
          "description": "Critical severity check that succeeds",
          "command": "echo 'critical_success'",
          "validation_type": "return_value",
          "expected_return": 0,
          "severity": "critical"
        },
        {
          "name": "critical_failure",
          "description": "Critical severity check that fails - should cause CRITICAL failure",
          "command": "exit 1",
          "validation_type": "return_value",
          "expected_return": 0,
          "severity": "critical"
        },
        {
          "name": "informational_success",
          "description": "Informational severity check that succeeds",
          "command": "echo 'informational_success'",
          "validation_type": "return_value",
          "expected_return": 0,
          "severity": "informational"
        },
        {
          "name": "informational_failure",
          "description": "Informational severity check that fails - should not cause CRITICAL failure",
          "command": "exit 1",
          "validation_type": "return_value",
          "expected_return": 0,
          "severity": "informational"
        }
      ]
    },
    {
      "name": "edge_case_tests",
      "description": "Test edge cases and boundary conditions",
      "checks": [
        {
          "name": "empty_command_test",
          "description": "Test check with empty command",
          "command": "echo 'empty command test'",
          "validation_type": "none",
          "severity": "informational"
        },
        {
          "name": "long_command_test",
          "description": "Test check with very long command",
          "command": "echo 'This is a very long command that tests the ability to handle commands with many characters and spaces in them to ensure the system can properly process and execute commands of various lengths without issues'",
          "validation_type": "return_value",
          "expected_return": 0,
          "severity": "informational"
        },
        {
          "name": "special_characters_test",
          "description": "Test check with special characters in command",
          "command": "echo 'test with special chars: !@#$%^&*()_+-=[]{}|;:,.<>?'",
          "validation_type": "output_pattern",
          "expected_pattern": "special chars",
          "severity": "informational"
        }
      ]
    }
  ]
} 